//============================================================================
//
//  mainui.cpp
//
//  Copyright (C) 2012  Sato Takaaki.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
//============================================================================

#include "mainui.hpp"

namespace WaveletAnalyzer {

MainUI::MainUI() {
}

MainUI::~MainUI() {
}

void MainUI::Execute(void) {
    if(!Init()) return;
    ShowUI("wamain");
    GUI::Execute();
    return;
}

bool MainUI::Init(void) {
    if(!LoadUI("wagui.xml")) {
        GtkWidget *dialog;
        dialog = gtk_message_dialog_new(
                nullptr,
                GTK_DIALOG_MODAL,
                GTK_MESSAGE_ERROR,
                GTK_BUTTONS_OK,
                "wagui.xml is not found."
        );
        gtk_window_set_title(GTK_WINDOW(dialog), "File not found.");
        gtk_dialog_run(GTK_DIALOG(dialog));
        gtk_widget_destroy(dialog);
        return false;
    }
    SetCallback("wamain",      "destroy",            GTK_SIGNAL_FUNC(Quit),       this);
    SetCallback("menu_open",   "button_press_event", GTK_SIGNAL_FUNC(OpenFile),   this);
    SetCallback("menu_device", "button_press_event", GTK_SIGNAL_FUNC(OpenDevice), this);
    SetCallback("menu_close",  "button_press_event", GTK_SIGNAL_FUNC(Close),      this);
    SetCallback("menu_quit",   "button_press_event", GTK_SIGNAL_FUNC(Quit),       this);
    return true;
}

void MainUI::OpenFile(GtkWidget *button, MainUI *this_ptr) {
    GtkWidget *dialog;
    dialog = gtk_file_selection_new("Please select a file for editing.");
    gtk_widget_show(dialog);
    return;
}

void MainUI::OpenDevice(GtkWidget *button, MainUI *this_ptr) {
    return;
}

void MainUI::Close(GtkWidget *button, MainUI *this_ptr) {
    return;
}

void MainUI::Quit(GtkWidget *button, MainUI *this_ptr) {
    gtk_main_quit();
    return;
}

}  // namespace WaveletAnalyzer
